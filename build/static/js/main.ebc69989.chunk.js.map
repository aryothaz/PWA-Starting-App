{"version":3,"sources":["components/BluetoothInput.js","components/BluetoothConnectButton.js","components/BluetoothConnect.js","components/Bluetooth.js","App.js","index.js"],"names":["BluetoothInput","input","React","createRef","handleSubmit","e","preventDefault","props","onBluetoothInputChange","current","value","emptyInput","target","onSubmit","this","className","id","type","name","placeholder","ref","onChange","autoComplete","Component","BluetoothConnectButton","onClick","connect","connected","BLEService_UUID","BluetoothConnect","connectToDevice","a","navigator","bluetooth","requestDevice","optionalServices","acceptAllDevices","then","device","onDeviceChange","addEventListener","onDisconnected","gatt","server","onServerChange","getPrimaryService","service","onServiceChange","getCharacteristic","characteristic","onCharacteristicChange","handleNotifications","onConnectedChange","startNotifications","catch","error","disconnect","console","log","render","Bluetooth","state","supportsBluetooth","handleDeviceChange","setState","handleServerChange","handleServiceChange","handleCharacteristicChange","handleConnectedChange","handleSupportsBluetoothChange","componentDidMount","event","str","i","byteLength","String","fromCharCode","getUint8","handleBluetoothInputChange","encoder","TextEncoder","writeValue","encode","_","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ebc69989.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass BluetoothInput extends React.Component {\r\n  input = React.createRef();\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onBluetoothInputChange(this.input.current.value);\r\n  };\r\n  emptyInput = (e) => {\r\n    if (e.target.value === \"\") {\r\n      this.props.onBluetoothInputChange(this.input.current.value);\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className=\"buscar-form\">\r\n        <input\r\n          id=\"BluetoothInput\"\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name=\"BluetoothInput\"\r\n          placeholder=\"Enviar mensaje\"\r\n          ref={this.input}\r\n          onChange={(e) => this.emptyInput(e)}\r\n          autoComplete=\"BluetoothInput\"\r\n        />\r\n        <button type=\"submit\">Enviar</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BluetoothInput;\r\n","import React from \"react\";\r\n\r\nconst BluetoothConnectButton = (props) => {\r\n  return (\r\n    <div className=\"BluetoothConnect\">\r\n        <button onClick={props.connect}>{props.connected?\"Conectado\":\"Conectar\"}</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BluetoothConnectButton;\r\n\r\n\r\n","import React from \"react\";\r\nimport BluetoothConnectButton from \"./BluetoothConnectButton\";\r\n\r\nconst BLEService_UUID  = 0x1700;\r\nconst BLE_Characteristic_UUID = 0x1A00;\r\n\r\nclass BluetoothConnect extends React.Component {\r\n\r\n    connectToDevice = async () => {\r\n        navigator.bluetooth.requestDevice({\r\n            optionalServices: [BLEService_UUID],\r\n            acceptAllDevices: true\r\n        })\r\n        .then(device => {\r\n            this.props.onDeviceChange(device);\r\n            device.addEventListener('gattserverdisconnected', this.props.onDisconnected);\r\n            return device.gatt.connect();\r\n        })\r\n        .then(server => {\r\n            this.props.onServerChange(server);\r\n            return server.getPrimaryService(BLEService_UUID);\r\n        })\r\n        .then(service => {\r\n            this.props.onServiceChange(service);\r\n            return service.getCharacteristic(BLE_Characteristic_UUID);\r\n        })\r\n        .then(characteristic => {\r\n            this.props.onCharacteristicChange(characteristic);\r\n            characteristic.addEventListener('characteristicvaluechanged',\r\n                                            this.props.handleNotifications);\r\n            this.props.onConnectedChange(true);\r\n            return characteristic.startNotifications();\r\n        })\r\n        .catch(error => {\r\n            if(this.props.device && this.props.device.gatt.connected)\r\n            {\r\n                this.props.device.gatt.disconnect();\r\n            }\r\n            console.log(\"Bluetooth conection: \"+ error);\r\n        });\r\n    };\r\n\r\n    render = () => {\r\n        const {\r\n            connected,\r\n        } = this.props;\r\n        return (\r\n            <BluetoothConnectButton\r\n                connect={this.connectToDevice}\r\n                connected={connected}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default BluetoothConnect;","import BluetoothInput from \"./BluetoothInput\";\r\nimport React from \"react\";\r\nimport BluetoothConnect from \"./BluetoothConnect\";\r\n\r\nconst BLEService_UUID  = 0x1700;\r\nconst BLE_Characteristic_UUID = 0x1A00;\r\n\r\nclass Bluetooth extends React.Component {\r\n\r\n    state = {\r\n        supportsBluetooth: false,\r\n        device: null,\r\n        server: null,\r\n        service: null,\r\n        characteristic: null,\r\n        value: null,\r\n        connected: false,\r\n    };\r\n    handleDeviceChange = (device) => {\r\n        this.setState({ device });\r\n    };\r\n    handleServerChange = (server) => {\r\n        this.setState({ server });\r\n    };\r\n    handleServiceChange = (service) => {\r\n        this.setState({ service });\r\n    };\r\n    handleCharacteristicChange = (characteristic) => {\r\n        this.setState({ characteristic });\r\n    };\r\n    handleConnectedChange = (connected) => {\r\n        this.setState({ connected });\r\n    };\r\n    handleSupportsBluetoothChange = (supportsBluetooth) => {\r\n        this.setState({ supportsBluetooth });\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        if (navigator.bluetooth) \r\n        this.handleSupportsBluetoothChange(true);\r\n    }\r\n\r\n    onDisconnected = () => {\r\n        this.setState({\r\n            connected: false,\r\n        });\r\n    }\r\n    \r\n    handleNotifications = (event) => {\r\n        let value = event.target.value;\r\n        let str = \"\";\r\n        for (let i = 0; i < value.byteLength; i++) {\r\n            str += String.fromCharCode(value.getUint8(i));\r\n        }\r\n        this.setState({\r\n            value: str,\r\n        });\r\n    }\r\n\r\n    handleBluetoothInputChange = () => {\r\n        let encoder = new TextEncoder('utf-8');\r\n        console.log('Setting Characteristic...');\r\n        this.state.characteristic.writeValue(encoder.encode(this.state.value))\r\n        .then(_ => {\r\n        console.log('> Characteristic changed to: ' + this.state.value);\r\n        })\r\n        .catch(error => {\r\n        console.log('Set Characteristic error: ' + error);\r\n        });\r\n    }\r\n\r\n    render = () => {\r\n        const {\r\n            supportsBluetooth,\r\n            connected,\r\n            device,\r\n            server,\r\n            service,\r\n            characteristic,\r\n        } = this.state;\r\n        return (\r\n        <div className=\"Bluetooth\">\r\n            {supportsBluetooth &&\r\n                <BluetoothConnect\r\n                    device= {device}\r\n                    onDeviceChange= {this.handleDeviceChange}\r\n                    server= {server}\r\n                    onServerChange= {this.handleServerChange}\r\n                    service= {service}\r\n                    onServiceChange= {this.handleServiceChange}\r\n                    characteristic= {characteristic}\r\n                    onCharacteristicChange= {this.handleCharacteristicChange}\r\n                    connected= {connected}\r\n                    onConnectedChange= {this.handleConnectedChange}\r\n                    handleNotifications= {this.handleNotifications}\r\n                    onDisconnected= {this.onDisconnected}\r\n                />\r\n            }\r\n            {connected &&\r\n                <div className=\"connected\">\r\n                    <BluetoothInput onBluetoothInputChange={this.handleBluetoothInputChange} />\r\n                    <p>{device.name}</p>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n}\r\n\r\nexport default Bluetooth;","import React from 'react';\r\nimport './App.css';\r\nimport Bluetooth from './components/Bluetooth';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"App\">\r\n        <Bluetooth />\r\n        </div>\r\n    );\r\n    }\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}