{"version":3,"sources":["components/BluetoothInput.js","components/BluetoothConnectButton.js","components/BluetoothConnect.js","components/Bluetooth.js","App.js","index.js"],"names":["BluetoothInput","input","React","createRef","handleSubmit","e","preventDefault","props","onBluetoothInputChange","current","value","emptyInput","target","console","log","onSubmit","this","className","id","type","name","placeholder","ref","onChange","autoComplete","Component","BluetoothConnectButton","onClick","connect","connected","BLEService_UUID","BLE_Characteristic_UUID","BluetoothConnect","connectToDevice","a","navigator","bluetooth","requestDevice","optionalServices","acceptAllDevices","then","device","onDeviceChange","addEventListener","onDisconnected","gatt","server","onServerChange","getPrimaryService","service","onServiceChange","getCharacteristic","characteristic","onCharacteristicChange","handleNotifications","onConnectedChange","startNotifications","catch","error","disconnect","render","Bluetooth","state","supportsBluetooth","handleDeviceChange","setState","handleServerChange","handleServiceChange","handleCharacteristicChange","handleConnectedChange","handleSupportsBluetoothChange","componentDidMount","event","str","i","byteLength","String","fromCharCode","getUint8","handleBluetoothInputChange","encoder","TextEncoder","array","encode","fin","Int8Array","send","length","set","writeValue","_","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9bdb8453.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass BluetoothInput extends React.Component {\r\n  input = React.createRef();\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onBluetoothInputChange(this.input.current.value);\r\n  };\r\n  emptyInput = (e) => {\r\n    if (e.target.value === \"\") {\r\n      console.log(this.input.current.value);\r\n      this.props.onBluetoothInputChange(this.input.current.value);\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className=\"buscar-form\">\r\n        <input\r\n          id=\"BluetoothInput\"\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name=\"BluetoothInput\"\r\n          placeholder=\"Enviar mensaje\"\r\n          ref={this.input}\r\n          onChange={(e) => this.emptyInput(e)}\r\n          autoComplete=\"BluetoothInput\"\r\n        />\r\n        <button type=\"submit\">Enviar</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BluetoothInput;\r\n","import React from \"react\";\r\n\r\nconst BluetoothConnectButton = (props) => {\r\n  return (\r\n    <div className=\"BluetoothConnect\">\r\n        <button onClick={props.connect}>{props.connected?\"Conectado\":\"Conectar\"}</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BluetoothConnectButton;\r\n\r\n\r\n","import React from \"react\";\r\nimport BluetoothConnectButton from \"./BluetoothConnectButton\";\r\n\r\nconst BLEService_UUID = \"18902a9a-1f4a-44fe-936f-14c8eea41800\";\r\nconst BLE_Characteristic_UUID = \"18902a9a-1f4a-44fe-936f-14c8eea41801\";\r\n\r\nclass BluetoothConnect extends React.Component {\r\n  connectToDevice = async () => {\r\n    navigator.bluetooth\r\n      .requestDevice({\r\n        optionalServices: [BLEService_UUID],\r\n        acceptAllDevices: true,\r\n      })\r\n      .then((device) => {\r\n        this.props.onDeviceChange(device);\r\n        device.addEventListener(\r\n          \"gattserverdisconnected\",\r\n          this.props.onDisconnected\r\n        );\r\n        return device.gatt.connect();\r\n      })\r\n      .then((server) => {\r\n        this.props.onServerChange(server);\r\n        return server.getPrimaryService(BLEService_UUID);\r\n      })\r\n      .then((service) => {\r\n        this.props.onServiceChange(service);\r\n        return service.getCharacteristic(BLE_Characteristic_UUID);\r\n      })\r\n      .then((characteristic) => {\r\n        this.props.onCharacteristicChange(characteristic);\r\n        characteristic.addEventListener(\r\n          \"characteristicvaluechanged\",\r\n          this.props.handleNotifications\r\n        );\r\n        this.props.onConnectedChange(true);\r\n        return characteristic.startNotifications();\r\n      })\r\n      .catch((error) => {\r\n        if (this.props.device && this.props.device.gatt.connected) {\r\n          this.props.device.gatt.disconnect();\r\n        }\r\n        console.log(\"Bluetooth conection: \" + error);\r\n      });\r\n  };\r\n\r\n  render = () => {\r\n    const { connected } = this.props;\r\n    return (\r\n      <BluetoothConnectButton\r\n        connect={this.connectToDevice}\r\n        connected={connected}\r\n      />\r\n    );\r\n  };\r\n}\r\n\r\nexport default BluetoothConnect;\r\n","import BluetoothInput from \"./BluetoothInput\";\r\nimport React from \"react\";\r\nimport BluetoothConnect from \"./BluetoothConnect\";\r\n\r\nclass Bluetooth extends React.Component {\r\n  state = {\r\n    supportsBluetooth: false,\r\n    device: null,\r\n    server: null,\r\n    service: null,\r\n    characteristic: null,\r\n    value: null,\r\n    connected: false,\r\n  };\r\n  handleDeviceChange = (device) => {\r\n    this.setState({ device });\r\n  };\r\n  handleServerChange = (server) => {\r\n    this.setState({ server });\r\n  };\r\n  handleServiceChange = (service) => {\r\n    this.setState({ service });\r\n  };\r\n  handleCharacteristicChange = (characteristic) => {\r\n    this.setState({ characteristic });\r\n  };\r\n  handleConnectedChange = (connected) => {\r\n    this.setState({ connected });\r\n  };\r\n  handleSupportsBluetoothChange = (supportsBluetooth) => {\r\n    this.setState({ supportsBluetooth });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    if (navigator.bluetooth) this.handleSupportsBluetoothChange(true);\r\n  };\r\n\r\n  onDisconnected = () => {\r\n    this.setState({\r\n      connected: false,\r\n    });\r\n  };\r\n\r\n  handleNotifications = (event) => {\r\n    let value = event.target.value;\r\n    let str = \"\";\r\n    for (let i = 0; i < value.byteLength; i++) {\r\n      str += String.fromCharCode(value.getUint8(i));\r\n    }\r\n    this.setState({\r\n      value: str,\r\n    });\r\n  };\r\n\r\n  handleBluetoothInputChange = (value) => {\r\n    let encoder = new TextEncoder();\r\n    console.log(\"Setting Characteristic...\");\r\n    let array = encoder.encode(value);\r\n    var fin = new Int8Array([13, 10]);\r\n    var send = new Int8Array(array.length + fin.length);\r\n    send.set(array);\r\n    send.set(fin, array.length);\r\n    this.state.characteristic\r\n      .writeValue(send)\r\n      .then((_) => {\r\n        console.log(\"> Characteristic changed to: \" + value + \": \" + send);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Set Characteristic error: \" + error);\r\n      });\r\n  };\r\n\r\n  render = () => {\r\n    const {\r\n      supportsBluetooth,\r\n      connected,\r\n      device,\r\n      server,\r\n      service,\r\n      characteristic,\r\n    } = this.state;\r\n    return (\r\n      <div className=\"Bluetooth\">\r\n        <h1 className=\"bluetooth-title\">Bluetooth</h1>\r\n        {supportsBluetooth ? (\r\n          <BluetoothConnect\r\n            device={device}\r\n            onDeviceChange={this.handleDeviceChange}\r\n            server={server}\r\n            onServerChange={this.handleServerChange}\r\n            service={service}\r\n            onServiceChange={this.handleServiceChange}\r\n            characteristic={characteristic}\r\n            onCharacteristicChange={this.handleCharacteristicChange}\r\n            connected={connected}\r\n            onConnectedChange={this.handleConnectedChange}\r\n            handleNotifications={this.handleNotifications}\r\n            onDisconnected={this.onDisconnected}\r\n          />\r\n        ) : (\r\n          <div className=\"no-bt\">Este dispositivo no soporta bluetooth.</div>\r\n        )}\r\n        {connected && (\r\n          <div className=\"connected\">\r\n            <BluetoothInput\r\n              onBluetoothInputChange={this.handleBluetoothInputChange}\r\n            />\r\n            <p>{device.name}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Bluetooth;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Bluetooth from './components/Bluetooth';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"App\">\r\n        <Bluetooth />\r\n        </div>\r\n    );\r\n    }\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}